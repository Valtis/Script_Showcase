(fn println (arg) 
  (
    (invokenative "printer" arg)
  )
)

(fn tailrecursion (iterations sum)
  (
    (if (= iterations 0)
      (
        (return sum)
      )
    )
    
    (return (tailrecursion (- iterations 1) (+ sum iterations)))
  )
)


(fn recursiveFunction (num) 
  (
    (println num)
    (if (< num 4) 
      (
        (recursiveFunction (+ num 1))
      )
      (
        (println "end of the road")
      )
    )
  )
)

(fn foo (a)
  (
    (println a)
  )
)

(fn main (a b container) 
  (
    (invokenative "reentrant" 25)
    (println "After reentrancy")
  )
)