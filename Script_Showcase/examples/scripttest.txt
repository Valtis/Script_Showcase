
(fn print_fizz_buzz (counter) 
  (
    (cond (= (mod counter 15) 0) ((invokenative "printer" "fizzbuzz"))
              (= (mod counter 3) 0) ((invokenative "printer" "fizz"))
              (= (mod counter 5) 0) ((invokenative "printer" "buzz"))
              else ((invokenative "printer" counter))
        )
  )
)

(fn fizzbuzz ()
  (locals counter) 
  (
    (setvalue counter 1)
    (while (>= 20 counter) 
      (
        (print_fizz_buzz counter)
        (setvalue counter (+ counter 1))
      )
    )
  )
)

(fn factorialImpl(mul acc)
  (
    (if (<= mul 1) 
      (
        (return acc)
      ) 
      (
        (return (factorialImpl (- mul 1) (* acc mul)))
      )
    )
  )
)

(fn factorial (initial)
  (
    (return (factorialImpl initial 1))
  )
)

(fn initializearray (array)
  (locals )
  ( 
    (writearray array 0 39)
    (writearray array 1 10)
    (writearray array 2 35)
    (writearray array 3 20)
    (writearray array 4 50)
    (writearray array 5 70)
    (writearray array 6 31)
    (writearray array 7 71)
    (writearray array 8 20)
    (writearray array 9 1)
  )
)

(fn printarray (array) 
  (locals length index)
  (
  #  (setvalue length (arraylength array))
    (setvalue length 10)
    (setvalue index 0)
    (while (< index length)
      (
        (invokenative "printer" (readarray array index))
        (setvalue index (+ index 1))
      )
    )
  )
)

(fn sorting ()
  (locals array)
  (
    (setvalue array (integerarray 10))
    (initializearray array)
    (printarray array)
  )
)

(fn example (float_param int_param native_object_param)
  (locals counter)
  (
    #(fizzbuzz)
    (sorting)
  )
)


