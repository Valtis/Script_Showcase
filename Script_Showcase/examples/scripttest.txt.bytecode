Statics count: 12

Function 'print_fizz_buzz' ID: 2
Local count: 1

0: STORE_LOCAL 0
2: LOAD_LOCAL 0
4: PUSH_INTEGER 15
6: DIV
7: PUSH_INTEGER 0
9: IS_EQ
10: JUMP_IF_FALSE 19
12: LOAD_STATIC_OBJECT 0
14: LOAD_STATIC_OBJECT 1
16: INVOKE_NATIVE
17: JUMP_IF_TRUE 58
19: LOAD_LOCAL 0
21: PUSH_INTEGER 3
23: DIV
24: PUSH_INTEGER 0
26: IS_EQ
27: JUMP_IF_FALSE 36
29: LOAD_STATIC_OBJECT 2
31: LOAD_STATIC_OBJECT 3
33: INVOKE_NATIVE
34: JUMP_IF_TRUE 58
36: LOAD_LOCAL 0
38: PUSH_INTEGER 5
40: DIV
41: PUSH_INTEGER 0
43: IS_EQ
44: JUMP_IF_FALSE 53
46: LOAD_STATIC_OBJECT 4
48: LOAD_STATIC_OBJECT 5
50: INVOKE_NATIVE
51: JUMP_IF_TRUE 58
53: LOAD_LOCAL 0
55: LOAD_STATIC_OBJECT 6
57: INVOKE_NATIVE
58: RETURN


Function 'fizzbuzz' ID: 4
Local count: 1

0: PUSH_INTEGER 1
2: STORE_LOCAL 0
4: PUSH_INTEGER 20
6: LOAD_LOCAL 0
8: IS_GREATER_OR_EQ
9: JUMP_IF_FALSE 24
11: LOAD_LOCAL 0
13: INVOKE_MANAGED 0
15: LOAD_LOCAL 0
17: PUSH_INTEGER 1
19: ADD
20: STORE_LOCAL 0
22: JUMP_IF_TRUE 4
24: RETURN


Function 'factorialImpl' ID: 6
Local count: 2

0: STORE_LOCAL 1
2: STORE_LOCAL 0
4: LOAD_LOCAL 0
6: PUSH_INTEGER 1
8: IS_LESS_OR_EQ
9: JUMP_IF_FALSE 16
11: LOAD_LOCAL 1
13: RETURN
14: JUMP_IF_TRUE 29
16: LOAD_LOCAL 0
18: PUSH_INTEGER 1
20: SUB
21: LOAD_LOCAL 1
23: LOAD_LOCAL 0
25: MUL
26: INVOKE_MANAGED 2
28: RETURN


Function 'factorial' ID: 1
Local count: 1

0: STORE_LOCAL 0
2: LOAD_LOCAL 0
4: PUSH_INTEGER 1
6: INVOKE_MANAGED 2
8: RETURN


Function 'initializearray' ID: 0
Local count: 1

0: STORE_LOCAL 0
2: LOAD_LOCAL 0
4: PUSH_INTEGER 0
6: PUSH_INTEGER 39
8: STORE_ARRAY_INDEX
9: LOAD_LOCAL 0
11: PUSH_INTEGER 1
13: PUSH_INTEGER 10
15: STORE_ARRAY_INDEX
16: LOAD_LOCAL 0
18: PUSH_INTEGER 2
20: PUSH_INTEGER 35
22: STORE_ARRAY_INDEX
23: LOAD_LOCAL 0
25: PUSH_INTEGER 3
27: PUSH_INTEGER 20
29: STORE_ARRAY_INDEX
30: LOAD_LOCAL 0
32: PUSH_INTEGER 4
34: PUSH_INTEGER 50
36: STORE_ARRAY_INDEX
37: LOAD_LOCAL 0
39: PUSH_INTEGER 5
41: PUSH_INTEGER 70
43: STORE_ARRAY_INDEX
44: LOAD_LOCAL 0
46: PUSH_INTEGER 6
48: PUSH_INTEGER 31
50: STORE_ARRAY_INDEX
51: LOAD_LOCAL 0
53: PUSH_INTEGER 7
55: PUSH_INTEGER 71
57: STORE_ARRAY_INDEX
58: LOAD_LOCAL 0
60: PUSH_INTEGER 8
62: PUSH_INTEGER 20
64: STORE_ARRAY_INDEX
65: LOAD_LOCAL 0
67: PUSH_INTEGER 9
69: PUSH_INTEGER 1
71: STORE_ARRAY_INDEX
72: RETURN


Function 'printarray' ID: 3
Local count: 3

0: STORE_LOCAL 0
2: LOAD_LOCAL 0
4: ARRAY_LENGTH
5: STORE_LOCAL 1
7: PUSH_INTEGER 0
9: STORE_LOCAL 2
11: LOAD_LOCAL 2
13: LOAD_LOCAL 1
15: IS_LESS
16: JUMP_IF_FALSE 35
18: LOAD_LOCAL 0
20: LOAD_LOCAL 2
22: LOAD_ARRAY_INDEX
23: LOAD_STATIC_OBJECT 7
25: INVOKE_NATIVE
26: LOAD_LOCAL 2
28: PUSH_INTEGER 1
30: ADD
31: STORE_LOCAL 2
33: JUMP_IF_TRUE 11
35: RETURN


Function 'swap' ID: 5
Local count: 4

0: STORE_LOCAL 2
2: STORE_LOCAL 1
4: STORE_LOCAL 0
6: LOAD_LOCAL 0
8: LOAD_LOCAL 1
10: LOAD_ARRAY_INDEX
11: STORE_LOCAL 3
13: LOAD_LOCAL 0
15: LOAD_LOCAL 1
17: LOAD_LOCAL 0
19: LOAD_LOCAL 2
21: LOAD_ARRAY_INDEX
22: STORE_ARRAY_INDEX
23: LOAD_LOCAL 0
25: LOAD_LOCAL 2
27: LOAD_LOCAL 3
29: STORE_ARRAY_INDEX
30: RETURN


Function 'getpivotindex' ID: 7
Local count: 3

0: STORE_LOCAL 2
2: STORE_LOCAL 1
4: STORE_LOCAL 0
6: LOAD_LOCAL 1
8: RETURN


Function 'partition' ID: 8
Local count: 6

0: STORE_LOCAL 2
2: STORE_LOCAL 1
4: STORE_LOCAL 0
6: LOAD_LOCAL 0
8: LOAD_LOCAL 1
10: LOAD_LOCAL 2
12: INVOKE_MANAGED 7
14: STORE_LOCAL 4
16: LOAD_LOCAL 0
18: LOAD_LOCAL 4
20: LOAD_ARRAY_INDEX
21: STORE_LOCAL 3
23: LOAD_LOCAL 0
25: LOAD_LOCAL 4
27: LOAD_LOCAL 2
29: INVOKE_MANAGED 6
31: LOAD_LOCAL 1
33: STORE_LOCAL 5
35: LOAD_LOCAL 1
37: LOAD_LOCAL 2
39: IS_LESS
40: JUMP_IF_FALSE 78
42: LOAD_LOCAL 0
44: LOAD_LOCAL 1
46: LOAD_ARRAY_INDEX
47: LOAD_LOCAL 3
49: IS_LESS
50: JUMP_IF_FALSE 69
52: LOAD_LOCAL 0
54: LOAD_LOCAL 1
56: LOAD_LOCAL 5
58: INVOKE_MANAGED 6
60: PUSH_INTEGER 1
62: LOAD_LOCAL 5
64: ADD
65: STORE_LOCAL 5
67: JUMP_IF_TRUE 69
69: LOAD_LOCAL 1
71: PUSH_INTEGER 1
73: ADD
74: STORE_LOCAL 1
76: JUMP_IF_TRUE 35
78: LOAD_LOCAL 0
80: LOAD_LOCAL 5
82: LOAD_LOCAL 2
84: INVOKE_MANAGED 6
86: LOAD_LOCAL 5
88: RETURN


Function 'quicksort' ID: 9
Local count: 4

0: STORE_LOCAL 2
2: STORE_LOCAL 1
4: STORE_LOCAL 0
6: LOAD_LOCAL 1
8: LOAD_LOCAL 2
10: IS_LESS
11: JUMP_IF_FALSE 44
13: LOAD_LOCAL 0
15: LOAD_LOCAL 1
17: LOAD_LOCAL 2
19: INVOKE_MANAGED 8
21: STORE_LOCAL 3
23: LOAD_LOCAL 0
25: LOAD_LOCAL 1
27: LOAD_LOCAL 3
29: INVOKE_MANAGED 9
31: LOAD_LOCAL 0
33: LOAD_LOCAL 3
35: PUSH_INTEGER 1
37: ADD
38: LOAD_LOCAL 2
40: INVOKE_MANAGED 9
42: JUMP_IF_TRUE 44
44: RETURN


Function 'sortarray' ID: 10
Local count: 1

0: STORE_LOCAL 0
2: LOAD_LOCAL 0
4: PUSH_INTEGER 0
6: LOAD_LOCAL 0
8: ARRAY_LENGTH
9: PUSH_INTEGER 1
11: SUB
12: INVOKE_MANAGED 9
14: RETURN


Function 'sorting' ID: 11
Local count: 1

0: PUSH_INTEGER 10
2: ALLOCATE_INTEGER_ARRAY
3: STORE_LOCAL 0
5: LOAD_LOCAL 0
7: INVOKE_MANAGED 4
9: LOAD_STATIC_OBJECT 8
11: LOAD_STATIC_OBJECT 9
13: INVOKE_NATIVE
14: LOAD_LOCAL 0
16: INVOKE_MANAGED 5
18: LOAD_LOCAL 0
20: INVOKE_MANAGED 10
22: LOAD_STATIC_OBJECT 10
24: LOAD_STATIC_OBJECT 11
26: INVOKE_NATIVE
27: LOAD_LOCAL 0
29: INVOKE_MANAGED 5
31: RETURN


Function 'example' ID: 12
Local count: 4

0: STORE_LOCAL 2
2: STORE_LOCAL 1
4: STORE_LOCAL 0
6: INVOKE_MANAGED 11
8: PUSH_DOUBLE 123.4
11: PUSH_FLOAT 1234.5
13: ADD
14: RETURN


